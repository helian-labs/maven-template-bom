<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目基本信息 -->
    <groupId>com.helian</groupId>
    <artifactId>bom-example-project</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <!-- 项目模块结构 -->
    <modules>
        <!-- BOM模块：首先运行，不使用父POM但是作为聚合器的一部分 -->
        <module>bom</module>
        <!-- 模块1：使用父POM -->
        <module>module1</module>
        <!-- 模块2：使用父POM，依赖模块1 -->
        <module>module2</module>
    </modules>

    <!-- 项目基本信息 -->
    <name>Project Top Level</name>
    <description>
        Maven多模块项目，采用与Maven依赖管理介绍中描述的不同方法来使用BOM（物料清单）。
        这种方法提供了更灵活的依赖版本管理方式。
    </description>
    <url>https://github.com/helian-labs/maven-template-bom</url>

    <!-- 项目属性配置 -->
    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.min.version>3.6.3</maven.min.version>
        <junit.version>5.9.3</junit.version>
    </properties>

    <!-- 依赖管理配置 -->
    <dependencyManagement>
        <dependencies>
            <!-- 引入BOM模块来统一管理项目版本 -->
            <dependency>
                <groupId>com.helian</groupId>
                <artifactId>bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 管理所有非项目制品的依赖版本 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>5.3.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.24.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 项目直接依赖配置 -->
    <dependencies>
        <!-- 无直接依赖！所有依赖都在子模块中声明 -->
    </dependencies>

    <!-- 构建配置管理 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven编译插件配置 -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <!-- 测试插件配置 -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <!-- JAR包打包插件配置 -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <!-- 在 build/pluginManagement/plugins 部分添加 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>enforce-maven</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>${maven.min.version}</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>${java.version}</version>
                                        </requireJavaVersion>
                                        <dependencyConvergence/>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>2.15.0</version>
                        <configuration>
                            <generateBackupPoms>false</generateBackupPoms>
                        </configuration>
                    </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>zhycn</name>
            <url>https://github.com/zhycn</url>
            <timezone>Asia/Shanghai</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <scm>
        <url>https://github.com/helian-labs/maven-template-bom</url>
        <connection>scm:git:git@github.com:helian-labs/maven-template-bom.git</connection>
        <developerConnection>scm:git:git@github.com:helian-labs/maven-template-bom.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

</project>
