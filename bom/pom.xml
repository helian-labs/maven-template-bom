<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    BOM模块 - 版本管理中心

    职责：
    - 作为项目的版本管理中心，统一管理所有内部模块的版本
    - 不包含实际代码，仅包含依赖版本声明

    架构位置：
    - 此模块不继承父POM，以避免版本循环依赖
    - 被父POM导入，从而为所有其他模块提供统一的版本管理
    -->

    <groupId>com.helian</groupId>
    <artifactId>bom</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>

    <name>Project Bill of Materials</name>

    <!-- 项目属性 -->
    <properties>
        <!-- 版本管理 - 与父项目保持一致 -->
        <revision>1.0.0-SNAPSHOT</revision>

        <!-- 插件版本 - 集中管理提高一致性和升级便捷性 -->
        <spotbugs-maven-plugin.version>4.9.3.2</spotbugs-maven-plugin.version>
        <spotless-maven-plugin.version>2.45.0</spotless-maven-plugin.version>
    </properties>

    <!--
        版本管理说明：
        1. 当使用 maven-release 插件或 versions-maven-plugin 处理所有子模块时，版本号会自动更新
        2. 使用显式版本号（如"${revision}"）统一管理版本
        3. 这种方式可以更好地管理项目依赖的版本一致性
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.helian</groupId>
                <artifactId>module1</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.helian</groupId>
                <artifactId>module2</artifactId>
                <version>${revision}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
        注意：由于此模块不继承父POM，需要在此处添加其他必要的配置节点，例如：
        - distributionManagement（分发管理）
        - repositories（仓库配置）
        - 其他项目所需的配置信息
    -->

    <!-- 添加质量检查 profile -->
    <profiles>
        <profile>
            <id>quality</id>
            <build>
                <plugins>
                    <!-- Spotless插件 -->
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <version>${spotless-maven-plugin.version}</version>
                        <configuration>
                            <java>
                                <importOrder />
                                <removeUnusedImports />
                                <googleJavaFormat />
                                <trimTrailingWhitespace />
                                <endWithNewline />
                            </java>
                        </configuration>
                        <executions>
                            <execution>
                                <id>spotless-check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>spotless-apply</id>
                                <!-- 通常不绑定到生命周期，手动执行 ./mvnw spotless:apply -->
                                <phase>none</phase>
                                <goals>
                                    <goal>apply</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Spotbugs插件 -->
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${spotbugs-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>spotbugs-check</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
